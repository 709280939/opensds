[1mdiff --git a/pkg/dock/dock.go b/pkg/dock/dock.go[m
[1mindex d9c29f58..a7fb5396 100755[m
[1m--- a/pkg/dock/dock.go[m
[1m+++ b/pkg/dock/dock.go[m
[36m@@ -462,7 +462,6 @@[m [mfunc (ds *dockServer) CreateVolumeGroup(ctx context.Context, opt *pb.CreateVolum[m
 			Status: model.VolumeGroupAvailable,[m
 		}[m
 	} else {[m
[31m-		db.C.UpdateStatus(c.NewContextFromJson(opt.GetContext()), vg, model.VolumeGroupError)[m
 		log.Error("When calling volume driver to create volume group:", err)[m
 		res.Reply = GenericResponseError("400", fmt.Sprint(err))[m
 		return &res, err[m
[36m@@ -471,16 +470,10 @@[m [mfunc (ds *dockServer) CreateVolumeGroup(ctx context.Context, opt *pb.CreateVolum[m
 	if vgUpdate != nil && vgUpdate.Status == model.VolumeGroupError {[m
 		msg := fmt.Sprintf("Error occurred when creating volume group %s", opt.GetId())[m
 		log.Error(msg)[m
[31m-		db.C.UpdateStatus(c.NewContextFromJson(opt.GetContext()), vg, model.VolumeGroupError)[m
[31m-		res.Reply = GenericResponseError("400", fmt.Sprint(msg))[m
[32m+[m		[32mres.Reply = GenericResponseError("400", msg)[m
 		return &res, err[m
 	}[m
 [m
[31m-	vg.Status = model.VolumeGroupAvailable[m
[31m-	vg.CreatedAt = time.Now().Format(constants.TimeFormat)[m
[31m-	vg.PoolId = opt.GetPoolId()[m
[31m-	db.C.UpdateStatus(c.NewContextFromJson(opt.GetContext()), vg, vg.Status)[m
[31m-[m
 	log.Info("Create group successfully.")[m
 	res.Reply = GenericResponseResult(vg)[m
 	return &res, nil[m
[36m@@ -519,12 +512,6 @@[m [mfunc (ds *dockServer) UpdateVolumeGroup(ctx context.Context, opt *pb.UpdateVolum[m
 	if _, ok := err.(*model.NotImplementError); ok {[m
 		groupUpdate, addVolumesUpdate, removeVolumesUpdate = nil, nil, nil[m
 	} else {[m
[31m-		err = db.C.UpdateStatus(c.NewContextFromJson(opt.GetContext()), group, model.VolumeGroupError)[m
[31m-		if err != nil {[m
[31m-			res.Reply = GenericResponseError("400", fmt.Sprint(err))[m
[31m-			return &res, err[m
[31m-		}[m
[31m-[m
 		for _, addVol := range addVolumesRef {[m
 			if err = db.C.UpdateStatus(c.NewContextFromJson(opt.GetContext()), addVol, model.VolumeError); err != nil {[m
 				res.Reply = GenericResponseError("400", fmt.Sprint(err))[m
